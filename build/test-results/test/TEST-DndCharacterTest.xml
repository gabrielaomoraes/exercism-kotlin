<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="DndCharacterTest" tests="19" skipped="0" failures="3" errors="0" timestamp="2020-10-16T16:58:56" hostname="CRED-1DQV9R2" time="22.189">
  <properties/>
  <testcase name="ability modifier for score 5 is n3" classname="DndCharacterTest" time="0.015"/>
  <testcase name="ability modifier for score 6 is n2" classname="DndCharacterTest" time="0.001"/>
  <testcase name="random character is valid" classname="DndCharacterTest" time="8.737">
    <failure message="java.lang.OutOfMemoryError: Java heap space" type="java.lang.OutOfMemoryError">java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.Arrays.copyOf(Arrays.java:3689)
	at java.base/java.util.ArrayList.grow(ArrayList.java:238)
	at java.base/java.util.ArrayList.grow(ArrayList.java:243)
	at java.base/java.util.ArrayList.add(ArrayList.java:486)
	at java.base/java.util.ArrayList.add(ArrayList.java:499)
	at kotlin.sequences.SequencesKt___SequencesKt.toCollection(_Sequences.kt:703)
	at kotlin.sequences.SequencesKt___SequencesKt.toMutableList(_Sequences.kt:732)
	at kotlin.sequences.SequencesKt___SequencesKt$sorted$1.iterator(_Sequences.kt:517)
	at kotlin.sequences.DropSequence$iterator$1.&lt;init&gt;(Sequences.kt:443)
	at kotlin.sequences.DropSequence.iterator(Sequences.kt:442)
	at kotlin.sequences.SequencesKt___SequencesKt.sumOfInt(_Sequences.kt:1893)
	at DndCharacter$Companion.ability(DndCharacter.kt:18)
	at DndCharacter.&lt;init&gt;(DndCharacter.kt:5)
	at DndCharacterTest.random character is valid(DndCharacterTest.kt:63)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
</failure>
  </testcase>
  <testcase name="ability modifier for score 10 is 0" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 11 is 0" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 12 is 1" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 13 is 1" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 14 is 2" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 15 is 2" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 16 is 3" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 17 is 3" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 18 is 4" classname="DndCharacterTest" time="0.0"/>
  <testcase name="random ability is within range" classname="DndCharacterTest" time="8.719">
    <failure message="java.lang.OutOfMemoryError: Java heap space" type="java.lang.OutOfMemoryError">java.lang.OutOfMemoryError: Java heap space
	at java.base/java.util.Arrays.copyOf(Arrays.java:3689)
	at java.base/java.util.ArrayList.grow(ArrayList.java:238)
	at java.base/java.util.ArrayList.grow(ArrayList.java:243)
	at java.base/java.util.ArrayList.add(ArrayList.java:486)
	at java.base/java.util.ArrayList.add(ArrayList.java:499)
	at kotlin.sequences.SequencesKt___SequencesKt.toCollection(_Sequences.kt:703)
	at kotlin.sequences.SequencesKt___SequencesKt.toMutableList(_Sequences.kt:732)
	at kotlin.sequences.SequencesKt___SequencesKt$sorted$1.iterator(_Sequences.kt:517)
	at kotlin.sequences.DropSequence$iterator$1.&lt;init&gt;(Sequences.kt:443)
	at kotlin.sequences.DropSequence.iterator(Sequences.kt:442)
	at kotlin.sequences.SequencesKt___SequencesKt.sumOfInt(_Sequences.kt:1893)
	at DndCharacter$Companion.ability(DndCharacter.kt:18)
	at DndCharacterTest.random ability is within range(DndCharacterTest.kt:57)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:566)
	at org.junit.runners.model.FrameworkMethod$1.runReflectiveCall(FrameworkMethod.java:50)
	at org.junit.internal.runners.model.ReflectiveCallable.run(ReflectiveCallable.java:12)
	at org.junit.runners.model.FrameworkMethod.invokeExplosively(FrameworkMethod.java:47)
	at org.junit.internal.runners.statements.InvokeMethod.evaluate(InvokeMethod.java:17)
	at org.junit.runners.ParentRunner.runLeaf(ParentRunner.java:325)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:78)
	at org.junit.runners.BlockJUnit4ClassRunner.runChild(BlockJUnit4ClassRunner.java:57)
	at org.junit.runners.ParentRunner$3.run(ParentRunner.java:290)
	at org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:71)
	at org.junit.runners.ParentRunner.runChildren(ParentRunner.java:288)
	at org.junit.runners.ParentRunner.access$000(ParentRunner.java:58)
	at org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:268)
	at org.junit.runners.ParentRunner.run(ParentRunner.java:363)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.runTestClass(JUnitTestClassExecutor.java:110)
	at org.gradle.api.internal.tasks.testing.junit.JUnitTestClassExecutor.execute(JUnitTestClassExecutor.java:58)
</failure>
  </testcase>
  <testcase name="each ability is only calculated once" classname="DndCharacterTest" time="4.713">
    <failure message="java.lang.OutOfMemoryError: Java heap space" type="java.lang.OutOfMemoryError">java.lang.OutOfMemoryError: Java heap space
</failure>
  </testcase>
  <testcase name="ability modifier for score 7 is n2" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 3 is n4" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 8 is n1" classname="DndCharacterTest" time="0.001"/>
  <testcase name="ability modifier for score 4 is n3" classname="DndCharacterTest" time="0.0"/>
  <testcase name="ability modifier for score 9 is n1" classname="DndCharacterTest" time="0.0"/>
  <system-out><![CDATA[]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
